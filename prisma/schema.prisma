generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @default(uuid()) @id
  email          String         @db.VarChar(255) @unique
  password       String         @db.VarChar(255)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  address        Address?
  admin          Admin?
  cartProducts   CartProduct[]
  orders         Order[]
}

model Admin {
  id        String   @default(uuid()) @id
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  protected Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Address {
  id      String @default(uuid()) @id
  country String @db.VarChar(255)
  city    String @db.VarChar(255)
  street  String @db.VarChar(255)
  zip     String @db.VarChar(32)
  user    User   @relation(fields: [userId], references: [id])
  userId  String
}

model Product {
  id              Int              @default(autoincrement()) @id
  name            String           @db.VarChar(255)
  price           Decimal          @db.Decimal(16, 2)
  access          Access           @default(PRIVATE)
  assets          Asset[]
  cartProducts    CartProduct[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model CartProduct {
  id        String  @default(uuid()) @id
  amount    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  user      User?   @relation(fields: [userId], references: [id])
  userId    String?
  order     Order?  @relation(fields: [orderId], references: [id])
  orderId   String? 
}

model Order {
  id              String          @default(uuid()) @id
  status          OrderStatus     @default(RECEIVED)
  user            User            @relation(fields: [userId], references: [id])
  userId          String
  products        CartProduct[]
  total           Decimal         @db.Decimal(16, 2)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

model Asset {
  id        String    @default(uuid()) @id
  filename  String    @db.VarChar(48)
  type      AssetType @relation(fields: [typeKey], references: [key])
  typeKey   String    @db.VarChar(255)
  product   Product?  @relation(fields: [productId], references: [id])
  productId Int?
}

model AssetType {
  key      String   @id @db.VarChar(255)
  mimeType String   @db.VarChar(255)
  assets   Asset[]
}

enum OrderStatus {
  RECEIVED
  PROCESSING
  DELIVERY
  DONE
}

enum Access {
  PUBLIC
  PRIVATE
}
